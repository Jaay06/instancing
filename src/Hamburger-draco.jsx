/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 hamburger-draco.glb --transform --instanceall 
Files: hamburger-draco.glb [19.02KB] > hamburger-draco-transformed.glb [18.08KB] (5%)
*/

import React, { useRef, useMemo, useContext, createContext } from "react"
import { useGLTF, Merged } from "@react-three/drei"
import { InstancedRigidBodies } from "@react-three/rapier"

const context = createContext()
export function Instances({ children, ...props }) {
  const { nodes } = useGLTF("/hamburger-draco-transformed.glb")
  const instances = useMemo(
    () => ({
      BottomBun: nodes.bottomBun,
      Meat: nodes.meat,
      Cheese: nodes.cheese,
    }),
    [nodes]
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => (
        <context.Provider value={instances} children={children} />
      )}
    </Merged>
  )
}

export function Model(props) {
  const instances = useContext(context)
  return (
    <group {...props} dispose={null}>
      <instances.BottomBun />
      <instances.Meat position={[0, 2.817, 0]} />
      <instances.Cheese position={[0, 3.04, 0]} />
    </group>
  )
}
useGLTF.preload("/hamburger-draco-transformed.glb")
